<?php
/**
 * GhesClusterRoles
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  System\Base\Providers\BasepackagesServiceProvider\Packages\ApiClientServices\Apis\Repos\Github
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.5.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace System\Base\Providers\BasepackagesServiceProvider\Packages\ApiClientServices\Apis\Repos\Github\Model;
use \System\Base\Providers\BasepackagesServiceProvider\Packages\ApiClientServices\Apis\Repos\Github\ObjectSerializer;

/**
 * GhesClusterRoles Class Doc Comment
 *
 * @category Class
 * @package  System\Base\Providers\BasepackagesServiceProvider\Packages\ApiClientServices\Apis\Repos\Github
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class GhesClusterRoles
{
    /**
     * Possible values of this enum
     */
    public const BLANK = 'Blank';

    public const ACTIONS_SERVER = 'ActionsServer';

    public const CONSUL_SERVER = 'ConsulServer';

    public const ELASTICSEARCH_SERVER = 'ElasticsearchServer';

    public const GIT_SERVER = 'GitServer';

    public const JOB_SERVER = 'JobServer';

    public const LAUNCH_SERVER = 'LaunchServer';

    public const MEMCACHE_SERVER = 'MemcacheServer';

    public const METRICS_SERVER = 'MetricsServer';

    public const MSSQL_SERVER = 'MssqlServer';

    public const MYSQL_SERVER = 'MysqlServer';

    public const PAGES_SERVER = 'PagesServer';

    public const REDIS_SERVER = 'RedisServer';

    public const STORAGE_SERVER = 'StorageServer';

    public const WEB_SERVER = 'WebServer';

    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::BLANK,
            self::ACTIONS_SERVER,
            self::CONSUL_SERVER,
            self::ELASTICSEARCH_SERVER,
            self::GIT_SERVER,
            self::JOB_SERVER,
            self::LAUNCH_SERVER,
            self::MEMCACHE_SERVER,
            self::METRICS_SERVER,
            self::MSSQL_SERVER,
            self::MYSQL_SERVER,
            self::PAGES_SERVER,
            self::REDIS_SERVER,
            self::STORAGE_SERVER,
            self::WEB_SERVER
        ];
    }
}


